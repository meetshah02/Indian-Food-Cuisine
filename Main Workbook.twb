<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='indian_food' inline='true' name='federated.00z9kmy09alfdl16yarpt0nt4njp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='indian_food' name='textscan.1vk69mn0ctvdhp14vczd31j81ga1'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Projects/Indian Food (Cuisine)/indian_food.csv' dataRefreshTime='' directory='C:/Projects/Indian Food (Cuisine)' filename='C:/Users/meets/AppData/Local/Temp/TableauTemp/01m1bhk108pj5u19exu1a1gvtslo/indian_food.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1vk69mn0ctvdhp14vczd31j81ga1' name='indian_food.csv' table='[C:\Projects\Indian Food (Cuisine)\indian_food#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L256:no:A1:L256:1' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='ingredients' ordinal='1' />
            <column datatype='string' name='diet' ordinal='2' />
            <column datatype='integer' name='prep_time' ordinal='3' />
            <column datatype='integer' name='cook_time' ordinal='4' />
            <column datatype='string' name='flavor_profile' ordinal='5' />
            <column datatype='string' name='course' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='region' ordinal='8' />
            <column datatype='real' name='avg_rating' ordinal='9' />
            <column datatype='integer' name='orders_num' ordinal='10' />
            <column datatype='integer' name='num_rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1vk69mn0ctvdhp14vczd31j81ga1' name='indian_food.csv' table='[C:\Projects\Indian Food (Cuisine)\indian_food#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L256:no:A1:L256:1' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='ingredients' ordinal='1' />
            <column datatype='string' name='diet' ordinal='2' />
            <column datatype='integer' name='prep_time' ordinal='3' />
            <column datatype='integer' name='cook_time' ordinal='4' />
            <column datatype='string' name='flavor_profile' ordinal='5' />
            <column datatype='string' name='course' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='region' ordinal='8' />
            <column datatype='real' name='avg_rating' ordinal='9' />
            <column datatype='integer' name='orders_num' ordinal='10' />
            <column datatype='integer' name='num_rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L256:no:A1:L256:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ingredients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ingredients]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>ingredients</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[diet]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>diet</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prep_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prep_time]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>prep_time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cook_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cook_time]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>cook_time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flavor_profile</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flavor_profile]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>flavor_profile</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course</remote-name>
            <remote-type>129</remote-type>
            <local-name>[course]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>course</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rating]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>avg_rating</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orders_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[orders_num]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>orders_num</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_rating]</local-name>
            <parent-name>[indian_food.csv]</parent-name>
            <remote-alias>num_rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='indian_food.csv' datatype='table' name='[__tableau_internal_object_id__].[indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
      <column caption='Cook Time' datatype='integer' name='[cook_time]' role='measure' type='quantitative' />
      <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
      <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
      <column caption='Flavor Profile' datatype='string' name='[flavor_profile]' role='dimension' type='nominal' />
      <column caption='Ingredients' datatype='string' name='[ingredients]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Num Rating' datatype='integer' name='[num_rating]' role='measure' type='quantitative' />
      <column caption='Orders Num' datatype='integer' name='[orders_num]' role='dimension' type='ordinal' />
      <column caption='Prep Time' datatype='integer' name='[prep_time]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Course,Name)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:course:nk]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Adhirasam&quot;</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;Attu&quot;</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;Bora Sawul&quot;</bucket>
            </map>
            <map to='#1fa7c4'>
              <bucket>&quot;Anarsa&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;Chicken Tikka&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;Chikki&quot;</bucket>
            </map>
            <map to='#21b087'>
              <bucket>&quot;Dosa&quot;</bucket>
            </map>
            <map to='#22b089'>
              <bucket>&quot;Chhena poda&quot;</bucket>
            </map>
            <map to='#23abc3'>
              <bucket>&quot;Ariselu&quot;</bucket>
            </map>
            <map to='#23acc3'>
              <bucket>&quot;Chakali&quot;</bucket>
            </map>
            <map to='#24ab77'>
              <bucket>&quot;Churma Ladoo&quot;</bucket>
            </map>
            <map to='#25ab74'>
              <bucket>&quot;Dal makhani&quot;</bucket>
            </map>
            <map to='#25b392'>
              <bucket>&quot;Chhena kheeri&quot;</bucket>
            </map>
            <map to='#27aa72'>
              <bucket>&quot;Fara&quot;</bucket>
            </map>
            <map to='#27afc2'>
              <bucket>&quot;Balu shahi&quot;</bucket>
            </map>
            <map to='#27b496'>
              <bucket>&quot;Daal baati churma&quot;</bucket>
            </map>
            <map to='#29a96d'>
              <bucket>&quot;Coconut vadi&quot;</bucket>
            </map>
            <map to='#29b69a'>
              <bucket>&quot;Chhena jalebi&quot;</bucket>
            </map>
            <map to='#29b69a'>
              <bucket>&quot;Dhokla&quot;</bucket>
            </map>
            <map to='#2ab3c1'>
              <bucket>&quot;Brown Rice&quot;</bucket>
            </map>
            <map to='#2bb4c0'>
              <bucket>&quot;Bandar laddu&quot;</bucket>
            </map>
            <map to='#2cb5c0'>
              <bucket>&quot;Chevdo&quot;</bucket>
            </map>
            <map to='#2cb8a3'>
              <bucket>&quot;Cheera Doi&quot;</bucket>
            </map>
            <map to='#2fa763'>
              <bucket>&quot;Dharwad pedha&quot;</bucket>
            </map>
            <map to='#2fb8bf'>
              <bucket>&quot;Basundi&quot;</bucket>
            </map>
            <map to='#30bbab'>
              <bucket>&quot;Cham cham&quot;</bucket>
            </map>
            <map to='#30bcad'>
              <bucket>&quot;Dahi vada&quot;</bucket>
            </map>
            <map to='#33a65c'>
              <bucket>&quot;Farsi Puri&quot;</bucket>
            </map>
            <map to='#33bcbe'>
              <bucket>&quot;Bebinca&quot;</bucket>
            </map>
            <map to='#33beb4'>
              <bucket>&quot;Chak Hao Kheer&quot;</bucket>
            </map>
            <map to='#34a559'>
              <bucket>&quot;Dhondas&quot;</bucket>
            </map>
            <map to='#34bfb7'>
              <bucket>&quot;Copra paak&quot;</bucket>
            </map>
            <map to='#35bfbd'>
              <bucket>&quot;Chorafali&quot;</bucket>
            </map>
            <map to='#37c1bd'>
              <bucket>&quot;Boondi&quot;</bucket>
            </map>
            <map to='#3aa34e'>
              <bucket>&quot;Dal tadka&quot;</bucket>
            </map>
            <map to='#3aa34f'>
              <bucket>&quot;Doodhpak&quot;</bucket>
            </map>
            <map to='#3fa145'>
              <bucket>&quot;Double ka meetha&quot;</bucket>
            </map>
            <map to='#3fa146'>
              <bucket>&quot;Ghooghra&quot;</bucket>
            </map>
            <map to='#459f3b'>
              <bucket>&quot;Dudhi halwa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bajri no rotlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chingri malai curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Karela bharta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuzhakkattai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakhala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Red Rice&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zunka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aloo gobi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gatta curry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kolim Jawla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mishti Chholar Dal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poriyal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thalipeeth&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Unni Appam&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Vada&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Vegetable jalfrezi&quot;</bucket>
            </map>
            <map to='#56a337'>
              <bucket>&quot;Gajar ka halwa&quot;</bucket>
            </map>
            <map to='#57a337'>
              <bucket>&quot;Handwo&quot;</bucket>
            </map>
            <map to='#587abb'>
              <bucket>&quot;Til Pitha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aloo tikki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicken razala&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kabiraji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Koshambri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Naan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Puri Bhaji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Undhiyu&quot;</bucket>
            </map>
            <map to='#6178bc'>
              <bucket>&quot;Sutar feni&quot;</bucket>
            </map>
            <map to='#6377bd'>
              <bucket>&quot;Uttapam&quot;</bucket>
            </map>
            <map to='#65a734'>
              <bucket>&quot;Jeera Aloo&quot;</bucket>
            </map>
            <map to='#67a733'>
              <bucket>&quot;Gavvalu&quot;</bucket>
            </map>
            <map to='#6a76be'>
              <bucket>&quot;Sukhdi&quot;</bucket>
            </map>
            <map to='#7274bf'>
              <bucket>&quot;Turiya Patra Vatana sabji&quot;</bucket>
            </map>
            <map to='#7474bf'>
              <bucket>&quot;Sohan papdi&quot;</bucket>
            </map>
            <map to='#7873c0'>
              <bucket>&quot;Upma&quot;</bucket>
            </map>
            <map to='#78ab30'>
              <bucket>&quot;Gheela Pitha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bhatura&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pani Pitha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandige&quot;</bucket>
            </map>
            <map to='#7d72c1'>
              <bucket>&quot;Sohan halwa&quot;</bucket>
            </map>
            <map to='#7d72c1'>
              <bucket>&quot;Tandoori Fish Tikka&quot;</bucket>
            </map>
            <map to='#7dad2f'>
              <bucket>&quot;Idiappam&quot;</bucket>
            </map>
            <map to='#8670c2'>
              <bucket>&quot;Singori&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beef Fry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chole bhature&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palak paneer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rongi&quot;</bucket>
            </map>
            <map to='#89b02c'>
              <bucket>&quot;Ghevar&quot;</bucket>
            </map>
            <map to='#8c6fc3'>
              <bucket>&quot;Thepla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alu Pitika&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chicken Tikka masala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kadai paneer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Koshimbir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Navrattan korma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puttu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Veg Kolhapuri&quot;</bucket>
            </map>
            <map to='#906fc4'>
              <bucket>&quot;Shufta&quot;</bucket>
            </map>
            <map to='#966ec3'>
              <bucket>&quot;Thayir sadam&quot;</bucket>
            </map>
            <map to='#9a6ec3'>
              <bucket>&quot;Shrikhand&quot;</bucket>
            </map>
            <map to='#9ab429'>
              <bucket>&quot;Goja&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bombil fry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dum aloo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Koldil Chicken&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Masor tenga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shukto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aloo matar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Butter chicken&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haq Maas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Konir Dom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pork Bharta&quot;</bucket>
            </map>
            <map to='#a26dc2'>
              <bucket>&quot;Surnoli&quot;</bucket>
            </map>
            <map to='#a2b627'>
              <bucket>&quot;Idli&quot;</bucket>
            </map>
            <map to='#a46dc2'>
              <bucket>&quot;Sheera&quot;</bucket>
            </map>
            <map to='#a6b726'>
              <bucket>&quot;Kadhi pakoda&quot;</bucket>
            </map>
            <map to='#abb825'>
              <bucket>&quot;Gud papdi&quot;</bucket>
            </map>
            <map to='#ae6cc1'>
              <bucket>&quot;Sheer korma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bisi bele bath&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Makki di roti sarson da saag&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paruppu sadam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicken Varuval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kothamali sadam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Obbattu holige&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajma chaval&quot;</bucket>
            </map>
            <map to='#b86bc0'>
              <bucket>&quot;Samosa&quot;</bucket>
            </map>
            <map to='#b86bc0'>
              <bucket>&quot;Shankarpali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhindi masala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daal Dhokli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Keri no ras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Litti chokha&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sattu ki roti&quot;</bucket>
            </map>
            <map to='#bc6bc0'>
              <bucket>&quot;Sevai&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Gulab jamun&quot;</bucket>
            </map>
            <map to='#c26abf'>
              <bucket>&quot;Shahi tukra&quot;</bucket>
            </map>
            <map to='#c2bc21'>
              <bucket>&quot;Kachori&quot;</bucket>
            </map>
            <map to='#c4bc21'>
              <bucket>&quot;Halvasan&quot;</bucket>
            </map>
            <map to='#cc69be'>
              <bucket>&quot;Sandesh&quot;</bucket>
            </map>
            <map to='#cdbb21'>
              <bucket>&quot;Hando Guri&quot;</bucket>
            </map>
            <map to='#ce69be'>
              <bucket>&quot;Sabudana Khichadi&quot;</bucket>
            </map>
            <map to='#d1bb21'>
              <bucket>&quot;Keerai kootu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bilahi Maas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daal puri&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luchi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paratha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sev khamani&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Black rice&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dalithoy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kofta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Masor Koni&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pattor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shahi paneer&quot;</bucket>
            </map>
            <map to='#d5bb21'>
              <bucket>&quot;Imarti&quot;</bucket>
            </map>
            <map to='#d5bb21'>
              <bucket>&quot;Kanji&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;Rasgulla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Galho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Koldil Duck&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Methi na Gota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pindi chana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tandoori Chicken&quot;</bucket>
            </map>
            <map to='#db6bbb'>
              <bucket>&quot;Rasabali&quot;</bucket>
            </map>
            <map to='#dd6cba'>
              <bucket>&quot;Sev tameta&quot;</bucket>
            </map>
            <map to='#de6db9'>
              <bucket>&quot;Poha&quot;</bucket>
            </map>
            <map to='#deba21'>
              <bucket>&quot;Jalebi&quot;</bucket>
            </map>
            <map to='#df3028'>
              <bucket>&quot;Misti doi&quot;</bucket>
            </map>
            <map to='#e0312d'>
              <bucket>&quot;Misi roti&quot;</bucket>
            </map>
            <map to='#e03426'>
              <bucket>&quot;Mag Dhokli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bengena Pitika&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Keerai masiyal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laapsi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paneer butter masala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saath&quot;</bucket>
            </map>
            <map to='#e16eb8'>
              <bucket>&quot;Ras malai&quot;</bucket>
            </map>
            <map to='#e23130'>
              <bucket>&quot;Modak&quot;</bucket>
            </map>
            <map to='#e23b25'>
              <bucket>&quot;Mihidana&quot;</bucket>
            </map>
            <map to='#e43337'>
              <bucket>&quot;Masala Dosa&quot;</bucket>
            </map>
            <map to='#e53338'>
              <bucket>&quot;Mohanthal&quot;</bucket>
            </map>
            <map to='#e64722'>
              <bucket>&quot;Mawa Bati&quot;</bucket>
            </map>
            <map to='#e6ba21'>
              <bucket>&quot;Kajjikaya&quot;</bucket>
            </map>
            <map to='#e771b5'>
              <bucket>&quot;Rabri&quot;</bucket>
            </map>
            <map to='#e83541'>
              <bucket>&quot;Mysore pak&quot;</bucket>
            </map>
            <map to='#e84d20'>
              <bucket>&quot;Lilva Kachori&quot;</bucket>
            </map>
            <map to='#e8ba21'>
              <bucket>&quot;Khakhra&quot;</bucket>
            </map>
            <map to='#e9521f'>
              <bucket>&quot;Malapua&quot;</bucket>
            </map>
            <map to='#ea541e'>
              <bucket>&quot;Lauki ki subji&quot;</bucket>
            </map>
            <map to='#eb3649'>
              <bucket>&quot;Nankhatai&quot;</bucket>
            </map>
            <map to='#eb364a'>
              <bucket>&quot;Muthiya&quot;</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>&quot;Pesarattu&quot;</bucket>
            </map>
            <map to='#ec374d'>
              <bucket>&quot;Pachadi&quot;</bucket>
            </map>
            <map to='#ec73b2'>
              <bucket>&quot;Qubani ka meetha&quot;</bucket>
            </map>
            <map to='#ed5e1c'>
              <bucket>&quot;Mahim halwa&quot;</bucket>
            </map>
            <map to='#ee3852'>
              <bucket>&quot;Palathalikalu&quot;</bucket>
            </map>
            <map to='#efb921'>
              <bucket>&quot;Kaju katli&quot;</bucket>
            </map>
            <map to='#f06719'>
              <bucket>&quot;Kutchi dabeli&quot;</bucket>
            </map>
            <map to='#f06919'>
              <bucket>&quot;Lyangcha&quot;</bucket>
            </map>
            <map to='#f13a5a'>
              <bucket>&quot;Panjeeri&quot;</bucket>
            </map>
            <map to='#f13a5c'>
              <bucket>&quot;Namakpara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Avial&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chingri Bhape&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kansar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kumol Sawul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rasam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vindaloo&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Pootharekulu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aloo methi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chana masala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kootu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mushroom do pyaza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prawn malai curry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theeyal&quot;</bucket>
            </map>
            <map to='#f2b921'>
              <bucket>&quot;Keerai sadam&quot;</bucket>
            </map>
            <map to='#f376af'>
              <bucket>&quot;Pav Bhaji&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Pantua&quot;</bucket>
            </map>
            <map to='#f47516'>
              <bucket>&quot;Ledikeni&quot;</bucket>
            </map>
            <map to='#f5456d'>
              <bucket>&quot;Payasam&quot;</bucket>
            </map>
            <map to='#f5476f'>
              <bucket>&quot;Paneer tikka masala&quot;</bucket>
            </map>
            <map to='#f64971'>
              <bucket>&quot;Pani puri&quot;</bucket>
            </map>
            <map to='#f64e77'>
              <bucket>&quot;Payokh&quot;</bucket>
            </map>
            <map to='#f779ad'>
              <bucket>&quot;Patra&quot;</bucket>
            </map>
            <map to='#f85781'>
              <bucket>&quot;Petha&quot;</bucket>
            </map>
            <map to='#f879ac'>
              <bucket>&quot;Poornalu&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Kombdi vade&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Kuzhambu&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Lassi&quot;</bucket>
            </map>
            <map to='#f88915'>
              <bucket>&quot;Laddu&quot;</bucket>
            </map>
            <map to='#f89117'>
              <bucket>&quot;Kuzhi paniyaram&quot;</bucket>
            </map>
            <map to='#f89217'>
              <bucket>&quot;Khichu&quot;</bucket>
            </map>
            <map to='#f89919'>
              <bucket>&quot;Kulfi falooda&quot;</bucket>
            </map>
            <map to='#f89f1a'>
              <bucket>&quot;Khorisa&quot;</bucket>
            </map>
            <map to='#f8a11b'>
              <bucket>&quot;Kheer sagar&quot;</bucket>
            </map>
            <map to='#f8a41b'>
              <bucket>&quot;Khandvi&quot;</bucket>
            </map>
            <map to='#f8a91d'>
              <bucket>&quot;Kheer&quot;</bucket>
            </map>
            <map to='#f8b11f'>
              <bucket>&quot;Kalakand&quot;</bucket>
            </map>
            <map to='#f8b620'>
              <bucket>&quot;Khaman&quot;</bucket>
            </map>
            <map to='#f8b921'>
              <bucket>&quot;Kakinada khaja&quot;</bucket>
            </map>
            <map to='#f95d88'>
              <bucket>&quot;Papad&quot;</bucket>
            </map>
            <map to='#f9608b'>
              <bucket>&quot;Phirni&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Biryani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khichdi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maach Jhol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paravannam&quot;</bucket>
            </map>
            <map to='#fb6995'>
              <bucket>&quot;Pinaca&quot;</bucket>
            </map>
            <map to='#fb6a96'>
              <bucket>&quot;Paniyaram&quot;</bucket>
            </map>
            <map to='#fc719e'>
              <bucket>&quot;Papadum&quot;</bucket>
            </map>
            <map to='#fc729f'>
              <bucket>&quot;Pithe&quot;</bucket>
            </map>
            <map to='#fe7caa'>
              <bucket>&quot;Pongal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhakri&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Currivepillai sadam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keerai poriyal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lauki ke kofte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sambar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aloo shimla mirch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chapati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kaara kozhambu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kos kootu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mushroom matar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puli sadam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='indian_food.csv' id='indian_food.csv_880FB62D8EB44DEE8813F90CA337E2BA'>
            <properties context=''>
              <relation connection='textscan.1vk69mn0ctvdhp14vczd31j81ga1' name='indian_food.csv' table='[C:\Projects\Indian Food (Cuisine)\indian_food#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:L256:no:A1:L256:1' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='string' name='ingredients' ordinal='1' />
                  <column datatype='string' name='diet' ordinal='2' />
                  <column datatype='integer' name='prep_time' ordinal='3' />
                  <column datatype='integer' name='cook_time' ordinal='4' />
                  <column datatype='string' name='flavor_profile' ordinal='5' />
                  <column datatype='string' name='course' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='region' ordinal='8' />
                  <column datatype='real' name='avg_rating' ordinal='9' />
                  <column datatype='integer' name='orders_num' ordinal='10' />
                  <column datatype='integer' name='num_rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='All Courses with filters Visualized via a Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium'>Name, Avg Rating, Ingredients and State.  Color shows details about Name.  Size shows sum of Avg Rating.  The marks are labeled by Name, Avg Rating, Ingredients and State. The data is filtered on Diet and Course. The Diet filter keeps vegetarian. </run>
            <run bold='true' fontcolor='#0000ff' fontname='Tableau Medium'>The Course filter can be changed by user&apos;s preference.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Ingredients' datatype='string' name='[ingredients]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg_rating]' derivation='None' name='[none:avg_rating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[ingredients]' derivation='None' name='[none:ingredients:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;main course&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' direction='DESC' using='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <size column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2072E011-A3C9-46F4-9E5A-127476355590}' />
    </worksheet>
    <worksheet name='Bar Chart of States with their Sum of Avg Ratings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]</rows>
        <cols>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{6665D02A-2BDB-41A3-9494-5BC454A08B1B}' />
    </worksheet>
    <worksheet name='Highest Rated Snacks Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;snack&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]</rows>
        <cols>([federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk] / ([federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk] / [federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]))</cols>
      </table>
      <simple-id uuid='{BE960135-8860-44E6-83FE-89D6EBB16A5A}' />
    </worksheet>
    <worksheet name='Highest Rated Snacks Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Ingredients' datatype='string' name='[ingredients]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg_rating]' derivation='None' name='[none:avg_rating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[ingredients]' derivation='None' name='[none:ingredients:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;snack&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' direction='DESC' using='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <size column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E9E6F1B8-4DDB-4B01-9812-D002572365C4}' />
    </worksheet>
    <worksheet name='Highest Rated Sweets Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Highest Rated Sweets Bar Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:course:nk]' member='&quot;dessert&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Anarsa&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Boondi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Gajar ka halwa&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Gud papdi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Halvasan&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Jalebi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kheer sagar&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kulfi falooda&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Laddu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Ledikeni&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Malapua&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Palathalikalu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Payokh&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pinaca&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Poornalu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pootharekulu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Ras malai&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Shankarpali&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sheer korma&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Shrikhand&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Singori&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sohan halwa&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([avg_rating])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:course:nk]' member='&quot;dessert&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]</rows>
        <cols>([federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk] / [federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk])</cols>
      </table>
      <simple-id uuid='{AC771809-92BF-4549-89C2-56F0F2585763}' />
    </worksheet>
    <worksheet name='Highest Rated Sweets Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Highest Rated Sweets Tree Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Ingredients' datatype='string' name='[ingredients]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg_rating]' derivation='None' name='[none:avg_rating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[ingredients]' derivation='None' name='[none:ingredients:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:course:nk]' member='&quot;dessert&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Anarsa&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Boondi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Gajar ka halwa&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Gud papdi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Halvasan&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Jalebi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kheer sagar&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kulfi falooda&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Laddu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Ledikeni&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Malapua&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Palathalikalu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Payokh&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pinaca&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Poornalu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pootharekulu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Ras malai&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Shankarpali&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sheer korma&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Shrikhand&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Singori&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sohan halwa&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([avg_rating])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:course:nk]' member='&quot;dessert&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <size column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A47480BE-AB3B-4D95-B14B-A6560E431AB9}' />
    </worksheet>
    <worksheet name='Highest Rated Vegetarian Main Course Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Highest Rated Vegetarian Main Course Bar Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:course:nk]' member='&quot;main course&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Bora Sawul&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Brown Rice&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Copra paak&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Daal baati churma&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Dal makhani&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Dal tadka&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Jeera Aloo&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kadhi pakoda&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Keerai kootu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Keerai sadam&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Khorisa&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kuzhambu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Lauki ki subji&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Misi roti&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pachadi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Paneer tikka masala&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Paniyaram&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pav Bhaji&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sev tameta&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sevai&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Thayir sadam&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Turiya Patra Vatana sabji&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Vegetable jalfrezi&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;main course&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]</rows>
        <cols>([federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk] / [federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk])</cols>
      </table>
      <simple-id uuid='{56A4AEA3-C2BE-47C6-95FB-2A915DF2081A}' />
    </worksheet>
    <worksheet name='Highest Rated Vegetarian Main Course Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>Highest Rated Vegetarian Main Course Tree Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Diet' datatype='string' name='[diet]' role='dimension' type='nominal' />
            <column caption='Ingredients' datatype='string' name='[ingredients]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[avg_rating]' derivation='None' name='[none:avg_rating:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[diet]' derivation='None' name='[none:diet:nk]' pivot='key' type='nominal' />
            <column-instance column='[ingredients]' derivation='None' name='[none:ingredients:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:course:nk]' member='&quot;main course&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Bora Sawul&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Brown Rice&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Copra paak&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Daal baati churma&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Dal makhani&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Dal tadka&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Jeera Aloo&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kadhi pakoda&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Keerai kootu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Keerai sadam&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Khorisa&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Kuzhambu&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Lauki ki subji&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Misi roti&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pachadi&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Paneer tikka masala&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Paniyaram&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Pav Bhaji&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sev tameta&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Sevai&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Thayir sadam&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Turiya Patra Vatana sabji&quot;' />
                <groupfilter function='member' level='[none:name:nk]' member='&quot;Vegetable jalfrezi&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;main course&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]'>
            <groupfilter function='member' level='[none:diet:nk]' member='&quot;vegetarian&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</column>
            <column>[federated.00z9kmy09alfdl16yarpt0nt4njp].[Inclusions (Course,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <size column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2614CE5D-4F15-4B1F-A4AA-787462E48E07}' />
    </worksheet>
    <worksheet name='Tree Map of States with their Sum of Avg Ratings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='indian_food' name='federated.00z9kmy09alfdl16yarpt0nt4njp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00z9kmy09alfdl16yarpt0nt4njp'>
            <column aggregation='Sum' caption='Avg Rating' datatype='real' name='[avg_rating]' role='dimension' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_rating]' derivation='Sum' name='[sum:avg_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
              <size column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' />
              <text column='[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8F3DDA63-EA20-4258-BABF-D6ACB257AF49}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='All Courses with filters Visualized via a Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{601AE1C1-DC9D-4586-B45D-5FD638AD73B8}' />
    </window>
    <window class='worksheet' name='Bar Chart of States with their Sum of Avg Ratings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4308B4C0-169A-4096-A1C4-96AE3013EA06}' />
    </window>
    <window class='worksheet' name='Tree Map of States with their Sum of Avg Ratings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E7DE89F-B769-4FC3-A1B7-AF76FB96ED2F}' />
    </window>
    <window class='worksheet' name='Highest Rated Vegetarian Main Course Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{334A47D4-FF0D-4B6B-ABA5-6CE08D2CF588}' />
    </window>
    <window class='worksheet' name='Highest Rated Vegetarian Main Course Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[sum:avg_rating:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E74B1706-B84C-4CD7-9659-5F2F5E88681E}' />
    </window>
    <window class='worksheet' name='Highest Rated Sweets Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:flavor_profile:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7772B1A2-6819-4821-B554-4E1BD9C2351E}' />
    </window>
    <window class='worksheet' name='Highest Rated Sweets Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:course:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:flavor_profile:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:region:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B30D41B6-985F-4B33-B0F0-59D18D98BAFA}' />
    </window>
    <window class='worksheet' name='Highest Rated Snacks Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2822F94E-BD3C-4892-A0AB-36C37AB45458}' />
    </window>
    <window class='worksheet' name='Highest Rated Snacks Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:avg_rating:ok]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:diet:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:ingredients:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:name:nk]</field>
            <field>[federated.00z9kmy09alfdl16yarpt0nt4njp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A07A34C2-F2BD-44B6-A87A-9B9DEE3D90C3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='All Courses with filters Visualized via a Tree Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar Chart of States with their Sum of Avg Ratings' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Snacks Bar Chart' width='192'>
      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
      95F4zy6tJm0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Snacks Tree Map' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Sweets Bar Chart' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Sweets Tree Map' width='192'>
      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
      ZI4bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Vegetarian Main Course Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Highest Rated Vegetarian Main Course Tree Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Tree Map of States with their Sum of Avg Ratings' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
